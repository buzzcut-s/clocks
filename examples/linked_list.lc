// Linked list using closures

fun Link(value, next) 
{
    fun access(method) 
    {
        if (method == "value") 
    	    return value;
    	
        if (method == "next") 
    	    return next;
    	
        print "unknown method " + method;
    }
    return access;
}

fun traverse(n, fn) 
{
    fn(n);
    if (n("next") != nil) 
    {
        return traverse(n("next"), fn);
    }
    return n;
}

fun print_value(n) 
{
    print n("value");
}

fun blank(n) 
{
}

fun print_tail(n) 
{
    var tail = traverse(n, blank);
    print tail("value");
}

var list = Link(1, Link(2, Link(21, Link(03, nil))));

traverse(list, print_value);

print "tail";
print_tail(list);

// Prints : 
// 1
// 2
// 21 
// tail
// 3
